import discord
from src.base import create_embed, create_components

def setup(cmd):
    """Configura os comandos de m√∫sica do bot"""
    
    @cmd.create_command(
        name="play",
        description="Toca uma m√∫sica a partir de uma URL",
        options=[
            {
                "name": "url",
                "description": "URL da m√∫sica (YouTube, SoundCloud, etc.)",
                "type": str,
                "required": True
            }
        ]
    )
    async def play_command(interaction, url: str):
        # Verifica canal de voz
        if not interaction.user.voice:
            await interaction.response.send_message(
                embed=create_embed(
                    title="‚ùå Erro",
                    description="Voc√™ precisa estar em um canal de voz para usar este comando!",
                    color=discord.Color.red()
                ),
                ephemeral=True
            )
            return
            
        # Resposta imediata para evitar timeout
        await interaction.response.defer()
        
        # Simula√ß√£o tempor√°ria - implementa√ß√£o real requer wavelink ou discord.py[voice]
        await interaction.followup.send(
            embed=create_embed(
                title="üéµ Tocando M√∫sica",
                description=f"[M√∫sica]({url}) adicionada √† fila.",
                thumbnail="https://img.youtube.com/vi/ID_DO_VIDEO/maxresdefault.jpg",
                fields=[
                    {"name": "Canal", "value": interaction.user.voice.channel.name},
                    {"name": "Solicitado por", "value": interaction.user.mention}
                ],
                color=discord.Color.blue()
            ),
            view=create_components([
                {
                    "type": "button",
                    "style": discord.ButtonStyle.secondary,
                    "label": "Pausar",
                    "emoji": "‚è∏Ô∏è",
                    "custom_id": "music_pause"
                },
                {
                    "type": "button",
                    "style": discord.ButtonStyle.danger,
                    "label": "Parar",
                    "emoji": "‚èπÔ∏è",
                    "custom_id": "music_stop"
                },
                {
                    "type": "button",
                    "style": discord.ButtonStyle.primary,
                    "label": "Pular",
                    "emoji": "‚è≠Ô∏è",
                    "custom_id": "music_skip"
                }
            ])
        )
    
    @cmd.create_command(
        name="stop",
        description="Para a reprodu√ß√£o atual"
    )
    async def stop_command(interaction):
        # Verifica√ß√µes de contexto
        if not interaction.user.voice:
            await interaction.response.send_message(
                embed=create_embed(
                    title="‚ùå Erro",
                    description="Voc√™ precisa estar em um canal de voz!",
                    color=discord.Color.red()
                ),
                ephemeral=True
            )
            return
            
        if not interaction.guild.voice_client or interaction.guild.voice_client.channel != interaction.user.voice.channel:
            await interaction.response.send_message(
                embed=create_embed(
                    title="‚ùå Erro",
                    description="O bot precisa estar no mesmo canal que voc√™!",
                    color=discord.Color.red()
                ),
                ephemeral=True
            )
            return
            
        # Simula√ß√£o tempor√°ria de parar m√∫sica
        await interaction.response.send_message(
            embed=create_embed(
                title="‚èπÔ∏è M√∫sica Parada",
                description="A reprodu√ß√£o foi interrompida.",
                color=discord.Color.red()
            )
        )
    
    @cmd.create_command(
        name="pause",
        description="Pausa a m√∫sica atual"
    )
    async def pause_command(interaction):
        # Verifica√ß√µes de contexto
        if not interaction.user.voice:
            await interaction.response.send_message(
                embed=create_embed(
                    title="‚ùå Erro",
                    description="Voc√™ precisa estar em um canal de voz!",
                    color=discord.Color.red()
                ),
                ephemeral=True
            )
            return
            
        if not interaction.guild.voice_client or interaction.guild.voice_client.channel != interaction.user.voice.channel:
            await interaction.response.send_message(
                embed=create_embed(
                    title="‚ùå Erro",
                    description="O bot precisa estar no mesmo canal que voc√™!",
                    color=discord.Color.red()
                ),
                ephemeral=True
            )
            return
            
        # Simula√ß√£o tempor√°ria de pausar m√∫sica
        await interaction.response.send_message(
            embed=create_embed(
                title="‚è∏Ô∏è M√∫sica Pausada",
                description="A reprodu√ß√£o foi pausada.",
                color=discord.Color.yellow()
            ),
            view=create_components([
                {
                    "type": "button",
                    "style": discord.ButtonStyle.success,
                    "label": "Retomar",
                    "emoji": "‚ñ∂Ô∏è",
                    "custom_id": "music_resume"
                }
            ])
        )
    
    @cmd.create_command(
        name="queue",
        description="Mostra a fila de m√∫sicas"
    )
    async def queue_command(interaction):
        # Simula√ß√£o tempor√°ria de fila de m√∫sicas
        await interaction.response.send_message(
            embed=create_embed(
                title="üé∂ Fila de M√∫sicas",
                description="M√∫sicas na fila:",
                fields=[
                    {"name": "1. Tocando agora", "value": "Nome da M√∫sica 1 - Autor"},
                    {"name": "2.", "value": "Nome da M√∫sica 2 - Autor"},
                    {"name": "3.", "value": "Nome da M√∫sica 3 - Autor"}
                ],
                footer={"text": "P√°gina 1/1 ‚Ä¢ Total: 3 m√∫sicas"},
                color=discord.Color.blue()
            ),
            view=create_components([
                {
                    "type": "button",
                    "style": discord.ButtonStyle.secondary,
                    "label": "Anterior",
                    "emoji": "‚óÄÔ∏è",
                    "custom_id": "queue_prev",
                    "disabled": True
                },
                {
                    "type": "button",
                    "style": discord.ButtonStyle.danger,
                    "label": "Limpar Fila",
                    "emoji": "üóëÔ∏è",
                    "custom_id": "queue_clear"
                },
                {
                    "type": "button", 
                    "style": discord.ButtonStyle.secondary,
                    "label": "Pr√≥xima",
                    "emoji": "‚ñ∂Ô∏è",
                    "custom_id": "queue_next",
                    "disabled": True
                }
            ])
        )
    
    @cmd.create_command(
        name="skip",
        description="Pula para a pr√≥xima m√∫sica"
    )
    async def skip_command(interaction):
        # Verifica√ß√µes de contexto
        if not interaction.user.voice:
            await interaction.response.send_message(
                embed=create_embed(
                    title="‚ùå Erro",
                    description="Voc√™ precisa estar em um canal de voz!",
                    color=discord.Color.red()
                ),
                ephemeral=True
            )
            return
            
        if not interaction.guild.voice_client or interaction.guild.voice_client.channel != interaction.user.voice.channel:
            await interaction.response.send_message(
                embed=create_embed(
                    title="‚ùå Erro",
                    description="O bot precisa estar no mesmo canal que voc√™!",
                    color=discord.Color.red()
                ),
                ephemeral=True
            )
            return
            
        # Simula√ß√£o tempor√°ria de pular m√∫sica
        await interaction.response.send_message(
            embed=create_embed(
                title="‚è≠Ô∏è M√∫sica Pulada",
                description="Pulando para a pr√≥xima m√∫sica.",
                color=discord.Color.blue()
            )
        )